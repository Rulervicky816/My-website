1. Print Hello World
#include <stdio.h>

int main() {
    printf("Hello, World!\n");
    return 0;
}
---
2. Sum of Two Numbers
#include <stdio.h>
int main() {
    int num1, num2, sum;
    printf("Enter two numbers: ");
    scanf("%d %d", &num1, &num2);
    sum = num1 + num2;
    printf("Sum: %d\\n", sum);
    return 0;
}
---
3. Calculate the Area of a Circle
#include <stdio.h>
#define PI 3.14159
int main() {
    float radius, area;
    printf("Enter the radius of the circle: ");
    scanf("%f", &radius);
    area = PI * radius * radius;
    printf("Area of the circle: %.2f\\n", area);
    return 0;
}
---
4. Find the Largest of Three Numbers
#include <stdio.h>
int main() {
    int a, b, c;
    printf("Enter three numbers: ");
    scanf("%d %d %d", &a, &b, &c);
    if (a >= b && a >= c) {
        printf("%d is the largest number.\\n", a);
    } else if (b >= a && b >= c) {
        printf("%d is the largest number.\\n", b);
    } else {
        printf("%d is the largest number.\\n", c);
    }
    return 0;
}
---
5. Check Even or Odd
#include <stdio.h>
int main() {
    int num;
    printf("Enter an integer: ");
    scanf("%d", &num);
    if (num % 2 == 0) {
        printf("%d is even.\\n", num);
    } else {
        printf("%d is odd.\\n", num);
    }
    return 0;
}
---
6. Grade Calculation
#include <stdio.h>
int main() {
    int marks;
    printf("Enter marks: ");
    scanf("%d", &marks);
    if (marks >= 90) {
        printf("Grade: A\\n");
    } else if (marks >= 80) {
        printf("Grade: B\\n");
    } else if (marks >= 70) {
        printf("Grade: C\\n");
    } else if (marks >= 60) {
        printf("Grade: D\\n");
    } else {
        printf("Grade: F\\n");
    }
    return 0;
}
---
11. Print Multiplication Table
#include <stdio.h>
int main() {
    int num, i;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("Multiplication table of %d:\n", num);
    for (i = 1; i <= 10; i++) {
        printf("%d x %d = %d\n", num, i, num * i);
    }
    return 0;
}
---
12. Factorial of a Number
#include <stdio.h>
int main() {
    int num, i;
    long long factorial = 1;
    printf("Enter a positive integer: ");
    scanf("%d", &num);
    if (num < 0) {
        printf("Factorial is not defined for negative numbers.\n");
    } else {
        for (i = 1; i <= num; i++) {
            factorial *= i;
        }
        printf("Factorial of %d = %lld\n", num, factorial);
    }
    return 0;
}
---
13. Swap Two Numbers
#include <stdio.h>
int main() {
    int a, b, temp;
    printf("Enter two integers(a and b): ");
    scanf("%d %d", &a, &b);
    printf("Before swapping: a = %d, b = %d\n", a, b);
    --- Swap using a temporary variable
    temp = a;
    a = b;
    b = temp;
    printf("After swapping: a = %d, b = %d\n", a, b);
    return 0;
}
---
14. Program to Check Even or Odd
#include <stdio.h>
int main() {
    int num;
    printf("Enter an integer: ");
    scanf("%d", &num);
    if (num % 2 == 0) {
        printf("%d is even.", num);
    } else {
        printf("%d is odd.", num);
    }
    return 0;
}
---
15. Program to Find the Largest of Three Numbers
#include <stdio.h>
int main() {
    int a, b, c;
    printf("Enter three numbers: ");
    scanf("%d %d %d", &a, &b, &c);
    if (a >= b && a >= c) {
        printf("Largest number is %d", a);
    } else if (b >= a && b >= c) {
        printf("Largest number is %d", b);
    } else {
        printf("Largest number is %d", c);
    }
    return 0;
}
---
16. Program to Print Fibonacci Series
#include <stdio.h>
int main() {
    int n, t1 = 0, t2 = 1, nextTerm;
    printf("Enter the number of terms: ");
    scanf("%d", &n);
    printf("Fibonacci Series: %d, %d, ", t1, t2);
    for (int i = 3; i <= n; ++i) {
        nextTerm = t1 + t2;
        printf("%d, ", nextTerm);
        t1 = t2;
        t2 = nextTerm;
    }
    return 0;
}
---
17. Program to Reverse a Number
#include <stdio.h>
int main() {
    int n, reverse = 0, remainder;
    printf("Enter an integer: ");
    scanf("%d", &n);
    while (n != 0) {
        remainder = n % 10;
        reverse = reverse * 10 + remainder;
        n /= 10;
    }
    printf("Reversed Number: %d", reverse);
    return 0;
}
---
18. Program to Calculate Factorial
#include <stdio.h>
int main() {
    int n;
    unsigned long long factorial = 1;
    printf("Enter a positive integer: ");
    scanf("%d", &n);
    for (int i = 1; i <= n; ++i) {
        factorial *= i;
    }
    printf("Factorial of %d = %llu", n, factorial);
    return 0;
}
---
19. Program to Check Prime Number
#include <stdio.h>
int main() {
    int n, flag = 0;
    printf("Enter a positive integer: ");
    scanf("%d", &n);
    for (int i = 2; i <= n / 2; ++i) {
        if (n % i == 0) {
            flag = 1;
            break;
        }
    }
    if (flag == 0) {
        printf("%d is a prime number.", n);
    } else {
        printf("%d is not a prime number.", n);
    }
    return 0;
}
---
20. Program to Swap Two Numbers
#include <stdio.h>
int main() {
    int a, b, temp;
    printf("Enter two numbers: ");
    scanf("%d %d", &a, &b);
    temp = a;
    a = b;
    b = temp;
    printf("After swapping: a = %d, b = %d", a, b);
    return 0;
}
---
21. Program to Find the Sum of Digits
#include <stdio.h>
int main() {
    int n, sum = 0, remainder;
    printf("Enter an integer: ");
    scanf("%d", &n);
    while (n != 0) {
        remainder = n % 10;
        sum += remainder;
        n /= 10;
    }
    printf("Sum of digits: %d", sum);
    return 0;
}
--- 
22. Program to Calculate Simple Interest
#include <stdio.h>
int main() {
    float principal, rate, time, interest;
    printf("Enter Principal, Rate and Time: ");
    scanf("%f %f %f", &principal, &rate, &time);
    interest = (principal * rate * time) / 100;
    printf("Simple Interest = %.2f", interest);
    return 0;
}
---
 23. Program to Find GCD of Two Numbers
#include <stdio.h>
int main() {
    int a, b, gcd;
    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);
    for (int i = 1; i <= a && i <= b; ++i) {
        if (a % i == 0 && b % i == 0) {
            gcd = i;
        }
    }
    printf("GCD of %d and %d = %d", a, b, gcd);
    return 0;
}

--- 
24. Program to Convert Celsius to Fahrenheit
#include <stdio.h>
int main() {
    float celsius, fahrenheit;
    printf("Enter temperature in Celsius: ");
    scanf("%f", &celsius);
    fahrenheit = (celsius * 9 / 5) + 32;
    printf("Temperature in Fahrenheit: %.2f", fahrenheit);
    return 0;
}

---
 25. Program to Average of N Numbers
#include <stdio.h>
int main() {
    int n, i;
    float num, sum = 0.0, average;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    for (i = 0; i < n; ++i) {
        printf("Enter number %d: ", i + 1);
        scanf("%f", &num);
        sum += num;
    }
    average = sum / n;
    printf("Average = %.2f\n", average);
    return 0;
}

---
 26. Program to Swap Two Numbers
#include <stdio.h>
int main() {
    int a, b, temp;
    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);
    printf("Before swapping: a = %d, b = %d\n", a, b);
    temp = a;
    a = b;
    b = temp;
    printf("After swapping: a = %d, b = %d\n", a, b);
    return 0;
}

---
 27. Program to Find Factorial of a Number
#include <stdio.h>
int main() {
    int n, i;
    long long factorial = 1;
    printf("Enter a positive integer: ");
    scanf("%d", &n);
    if (n < 0)
        printf("Error! Factorial of a negative number doesn't exist.\n");
    else {
        for (i = 1; i <= n; ++i) {
            factorial *= i;
        }
        printf("Factorial of %d = %lld\n", n, factorial);
    }
    return 0;
}

--- 
28. Program to Check Prime Number
#include <stdio.h>
int main() {
    int n, i, flag = 0;
    printf("Enter a positive integer: ");
    scanf("%d", &n);
    for (i = 2; i <= n / 2; ++i) {
        if (n % i == 0) {
            flag = 1;
            break;
        }
    }
    if (n == 0 || n == 1)
        printf("%d is not a prime number.\n", n);
    else {
        if (flag == 0)
            printf("%d is a prime number.\n", n);
        else
            printf("%d is not a prime number.\n", n);
    }
    return 0;
}

--- 
29. Program to Reverse a Number
#include <stdio.h>
int main() {
    int n, reversed = 0, remainder;
    printf("Enter an integer: ");
    scanf("%d", &n);
    while (n != 0) {
        remainder = n % 10;
        reversed = reversed * 10 + remainder;
        n /= 10;
    }
    printf("Reversed Number = %d\n", reversed);
    return 0;
}

---
 30. Program to Generate Fibonacci Series
#include <stdio.h>
int main() {
    int n, t1 = 0, t2 = 1, nextTerm = 0;
    printf("Enter the number of terms: ");
    scanf("%d", &n);
    printf("Fibonacci Series: %d, %d, ", t1, t2);
    nextTerm = t1 + t2;
    for (int i = 3; i <= n; ++i) {
        printf("%d, ", nextTerm);
        t1 = t2;
        t2 = nextTerm;
        nextTerm = t1 + t2;
    }
    return 0;
}

---
 31. Program to Find the Sum of Digits
#include <stdio.h>
int main() {
    int n, sum = 0, remainder;
    printf("Enter an integer: ");
    scanf("%d", &n);
    while (n != 0) {
        remainder = n % 10;
        sum += remainder;
        n /= 10;
    }
    printf("Sum of digits = %d\n", sum);
    return 0;
}

---
 32. Program to Check Armstrong Number
#include <stdio.h>
#include <math.h>
int main() {
    int n, originalNum, remainder, result = 0, digits = 0;
    printf("Enter an integer: ");
    scanf("%d", &n);
    originalNum = n;
    while (originalNum != 0) {
        originalNum /= 10;
        ++digits;
    }
    originalNum = n;
    while (originalNum != 0) {
        remainder = originalNum % 10;
        result += pow(remainder, digits);
        originalNum /= 10;
    }
    if (result == n)
        printf("%d is an Armstrong number.\n", n);
    else
        printf("%d is not an Armstrong number.\n", n);
    return 0;
}

--- 
33. Program to Check Palindrome
#include <stdio.h>
int main() {
    int n, reversed = 0, remainder, originalNum;
    printf("Enter an integer: ");
    scanf("%d", &n);
    originalNum = n;
    while (n != 0) {
        remainder = n % 10;
        reversed = reversed * 10 + remainder;
        n /= 10;
    }
    if (originalNum == reversed)
        printf("%d is a palindrome.\n", originalNum);
    else
        printf("%d is not a palindrome.\n", originalNum);
    return 0;
}

--- 
34. Program to Convert Decimal to Binary
#include <stdio.h>
int main() {
    int n, binary[32], i = 0;
    printf("Enter a decimal number: ");
    scanf("%d", &n);
    while (n > 0) {
        binary[i] = n % 2;
        n /= 2;
        i++;
    }
    printf("Binary equivalent: ");
    for (int j = i - 1; j >= 0; j--)
        printf("%d", binary[j]);
    printf("\n");
    return 0;
}

--- 
35. Program to Convert Binary to Decimal
#include <stdio.h>
#include <math.h>
int main() {
    int n, decimal = 0, base = 1, remainder;
    printf("Enter a binary number: ");
    scanf("%d", &n);
    while (n > 0) {
        remainder = n % 10;
        decimal = decimal + remainder * base;
        n /= 10;
        base *= 2;
    }
    printf("Decimal equivalent: %d\n", decimal);
    return 0;
}
---
 36. Program to Calculate Simple Interest
#include <stdio.h>

int main() {
    float principal, rate, time, interest;
    printf("Enter Principal, Rate, and Time: ");
    scanf("%f %f %f", &principal, &rate, &time);
    interest = (principal * rate * time) / 100;
    printf("Simple Interest = %.2f\n", interest);
    return 0;
}
---
    
 37. Program to Convert Fahrenheit to Celsius
#include <stdio.h>

int main() {
    float fahrenheit, celsius;
    printf("Enter temperature in Fahrenheit: ");
    scanf("%f", &fahrenheit);
    celsius = (fahrenheit - 32) * 5 / 9;
    printf("Temperature in Celsius: %.2f\n", celsius);
    return 0;
}
---

  38. Program to Find GCD of Two Numbers
#include <stdio.h>

int main() {
    int a, b, gcd, i;
    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);
    for (i = 1; i <= a && i <= b; ++i) {
        if (a % i == 0 && b % i == 0) {
            gcd = i;
        }
    }
    printf("GCD of %d and %d is %d\n", a, b, gcd);
    return 0;
}
---
    
 39. Program to Check Leap Year
#include <stdio.h>

int main() {
    int year;
    printf("Enter a year: ");
    scanf("%d", &year);
    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        printf("%d is a leap year.\n", year);
    } else {
        printf("%d is not a leap year.\n", year);
    }
    return 0;
}
---
    
 40. Program to Count Vowels in a String
#include <stdio.h>

int main() {
    char str[100];
    int i, vowels = 0;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    for (i = 0; str[i] != '\0'; i++) {
        if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u' ||
            str[i] == 'A' || str[i] == 'E' || str[i] == 'I' || str[i] == 'O' || str[i] == 'U') {
            vowels++;
        }
    }
    printf("Number of vowels: %d\n", vowels);
    return 0;
}
---
    
 41. Program to Sort Numbers in Ascending Order
#include <stdio.h>

int main() {
    int n, i, j, temp;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d integers:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
     Sorting using bubble sort
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                 Swap
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
    printf("Sorted array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0;
}
---
    
 42. Program to Find the Sum of Elements in an Array
#include <stdio.h>

int main() {
    int n, i, sum = 0;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d integers:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
        sum += arr[i];  Add to sum
    }
    printf("Sum = %d\n", sum);
    return 0;
}
---
    
 43. Program to Find the Minimum and Maximum in an Array
#include <stdio.h>

int main() {
    int n, i, min, max;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d integers:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    min = max = arr[0];  Assume first element is min and max
    for (i = 1; i < n; i++) {
        if (arr[i] < min) {
            min = arr[i];  Update min
        }
        if (arr[i] > max) {
            max = arr[i];  Update max
        }
    }
    printf("Minimum = %d, Maximum = %d\n", min, max);
    return 0;
}
---
    
 44. Program to Remove Duplicate Elements from Array
#include <stdio.h>

int main() {
    int n, i, j, k = 0;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n], unique[n];  To store unique elements
    printf("Enter %d integers:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    for (i = 0; i < n; i++) {
        for (j = 0; j < k; j++) {
            if (arr[i] == unique[j]) {
                break;  Duplicate found
            }
        }
        if (j == k) {  No duplicate found
            unique[k++] = arr[i];  Add to unique array
        }
    }
    printf("Unique elements: ");
    for (i = 0; i < k; i++) {
        printf("%d ", unique[i]);
    }
    printf("\n");
    return 0;
}
---
    
 45. Program to Count Occurrences of a Character in a String
#include <stdio.h>

int main() {
    char str[100], ch;
    int count = 0;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    printf("Enter a character to find: ");
    scanf("%c", &ch);
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] == ch) {
            count++;
        }
    }
    printf("Character '%c' occurred %d times in the string.\n", ch, count);
    return 0;
}
---
    
 46. Program to Calculate Power of a Number
#include <stdio.h>

int main() {
    int base, exp;
    long long result = 1;
    printf("Enter base and exponent: ");
    scanf("%d %d", &base, &exp);
    for (int i = 1; i <= exp; ++i) {
        result *= base;  result = result * base
    }
    printf("%d raised to the power %d = %lld\n", base, exp, result);
    return 0;
}
---
47. Program to Merge Two Arrays
#include <stdio.h>

int main() {
    int a[100], b[100], c[200], n1, n2;
    printf("Enter number of elements in first array: ");
    scanf("%d", &n1);
    printf("Enter elements of first array:\n");
    for (int i = 0; i < n1; ++i) {
        scanf("%d", &a[i]);
    }

    printf("Enter number of elements in second array: ");
    scanf("%d", &n2);
    printf("Enter elements of second array:\n");
    for (int i = 0; i < n2; ++i) {
        scanf("%d", &b[i]);
    }

    // Merging
    for (int i = 0; i < n1; ++i) {
        c[i] = a[i];
    }
    for (int i = 0; i < n2; ++i) {
        c[n1 + i] = b[i];
    }

    printf("Merged array:\n");
    for (int i = 0; i < n1 + n2; ++i) {
        printf("%d ", c[i]);
    }
    printf("\n");
    return 0;
}

---
48. Program to Sort an Array
#include <stdio.h>

int main() {
    int n, temp;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];

    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &arr[i]);
    }

    // Bubble sort
    for (int i = 0; i < n - 1; ++i) {
        for (int j = 0; j < n - i - 1; ++j) {
            if (arr[j] > arr[j + 1]) {
                // Swap
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    printf("Sorted array:\n");
    for (int i = 0; i < n; ++i) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0;
}

---
49. Program to Find the Second Largest Number in an Array
#include <stdio.h>
#include <limits.h>

int main() {
    int n, largest = INT_MIN, second_largest = INT_MIN;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];

    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &arr[i]);
        if (arr[i] > largest) {
            second_largest = largest;
            largest = arr[i];
        } else if (arr[i] > second_largest && arr[i] < largest) {
            second_largest = arr[i];
        }
    }

    if (second_largest == INT_MIN) {
        printf("There is no second largest element.\n");
    } else {
        printf("The second largest number is %d.\n", second_largest);
    }
    return 0;
}

---
50. Program to Count Vowels in a String
#include <stdio.h>

int main() {
    char str[100];
    int count = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    for (int i = 0; str[i] != '\0'; ++i) {
        char ch = str[i];
        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' ||
            ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U') {
            count++;
        }
    }

    printf("Number of vowels = %d\n", count);
    return 0;
}

---
51. Program to Find Length of a String
#include <stdio.h>

int main() {
    char str[100];
    int length = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    for (int i = 0; str[i] != '\0'; ++i) {
        length++;
    }

    printf("Length of the string = %d\n", length);
    return 0;
}

---
52. Program to Reverse a String
#include <stdio.h>

int main() {
    char str[100], rev[100];
    int length = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    // Finding length
    while (str[length] != '\0') {
        length++;
    }

    // Reversing
    for (int i = 0; i < length; i++) {
        rev[i] = str[length - i - 1];
    }
    rev[length] = '\0'; // Null-terminate the reversed string

    printf("Reversed string: %s\n", rev);
    return 0;
}

---
53. Program to Check for Palindrome
#include <stdio.h>
#include <string.h>

int main() {
    char str[100], rev[100];
    int length;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    str[strcspn(str, "\n")] = 0; // Remove newline character

    length = strlen(str);

    // Reversing
    for (int i = 0; i < length; i++) {
        rev[i] = str[length - i - 1];
    }
    rev[length] = '\0'; // Null-terminate the reversed string

    if (strcmp(str, rev) == 0) {
        printf("%s is a palindrome.\n", str);
    } else {
        printf("%s is not a palindrome.\n", str);
    }
    return 0;
}

---
54. Program to Count Characters, Words, and Sentences
#include <stdio.h>
#include <ctype.h>

int main() {
    char str[100];
    int chars = 0, words = 0, sentences = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    for (int i = 0; str[i] != '\0'; i++) {
        if (isalnum(str[i])) {
            chars++;
        }
        if (str[i] == ' ') {
            words++;
        }
        if (str[i] == '.' || str[i] == '!' || str[i] == '?') {
            sentences++;
        }
    }

    words += 1; // Adding one for the last word
    printf("Characters: %d, Words: %d, Sentences: %d\n", chars, words, sentences);
    return 0;
}

---
55. Program to Sort an Array
#include <stdio.h>

void swap(int *xp, int *yp) {
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}

void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1])
                swap(&arr[j], &arr[j + 1]);
        }
    }
}

int main() {
    int n;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    bubbleSort(arr, n);
    printf("Sorted array: \n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    return 0;
}

---
56. Program to Find Second Largest Number
#include <stdio.h>

int main() {
    int n, i, first, second;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    first = second = -1;
    for (i = 0; i < n; i++) {
        if (arr[i] > first) {
            second = first;
            first = arr[i];
        } else if (arr[i] > second && arr[i] != first) {
            second = arr[i];
        }
    }
    if (second == -1) {
        printf("There is no second largest element.\n");
    } else {
        printf("The second largest element is %d\n", second);
    }
    return 0;
}
---
57. Program to Merge Two Arrays
#include <stdio.h>
int main() {
    int n1, n2, i, j;
    printf("Enter number of elements in first array: ");
    scanf("%d", &n1);
    int arr1[n1];
    printf("Enter %d elements:\n", n1);
    for (i = 0; i < n1; i++) {
        scanf("%d", &arr1[i]);
    }
    printf("Enter number of elements in second array: ");
    scanf("%d", &n2);
    int arr2[n2];
    printf("Enter %d elements:\n", n2);
    for (i = 0; i < n2; i++) {
        scanf("%d", &arr2[i]);
    }
    int merged[n1 + n2];
    for (i = 0; i < n1; i++) {
        merged[i] = arr1[i];
    }
    for (j = 0; j < n2; j++, i++) {
        merged[i] = arr2[j];
    }
    printf("Merged array: \n");
    for (i = 0; i < n1 + n2; i++) {
        printf("%d ", merged[i]);
    }
    return 0;
}

---
58. Program to Remove Duplicate Elements
#include <stdio.h>
int main() {
    int n, i, j, k = 0;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n], unique[n];
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    for (i = 0; i < n; i++) {
        for (j = 0; j < k; j++) {
            if (arr[i] == unique[j]) {
                break;
            }
        }
        if (j == k) {
            unique[k++] = arr[i];
        }
    }
    printf("Unique elements: \n");
    for (i = 0; i < k; i++) {
        printf("%d ", unique[i]);
    }
    return 0;
}

---
59. Program to Count Vowels and Consonants
#include <stdio.h>
#include <string.h>
int main() {
    char str[100];
    int vowels = 0, consonants = 0;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    for (int i = 0; str[i] != '\0'; i++) {
        char ch = str[i];
        if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {
            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' ||
                ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U') {
                vowels++;
            } else {
                consonants++;
            }
        }
    }
    printf("Vowels: %d\n", vowels);
    printf("Consonants: %d\n", consonants);
    return 0;
}

---
60. Program to Print Pyramid Pattern
#include <stdio.h>
int main() {
    int n, space;
    printf("Enter the number of rows: ");
    scanf("%d", &n);
    for (int i = 1; i <= n; i++) {
        for (space = 1; space <= n - i; space++)
            printf(" ");
        for (int j = 1; j <= 2 * i - 1; j++)
            printf("*");
        printf("\n");
    }
    return 0;
}

---
61. Program to Find the Length of a String
#include <stdio.h>
#include <string.h>
int main() {
    char str[100];
    int length;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    length = strlen(str) - 1; // Exclude newline character
    printf("Length of the string: %d\n", length);
    return 0;
}

---
62. Program to Count Vowels and Consonants
#include <stdio.h>
int main() {
    char str[100];
    int vowels = 0, consonants = 0;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] >= 'A' && str[i] <= 'Z') {
            str[i] += 32; // Convert to lowercase
        }
        if (str[i] >= 'a' && str[i] <= 'z') {
            if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u') {
                vowels++;
            } else {
                consonants++;
            }
        }
    }
    printf("Vowels: %d\n", vowels);
    printf("Consonants: %d\n", consonants);
    return 0;
}

---
63. Program to Reverse a String
#include <stdio.h>
#include <string.h>
int main() {
    char str[100], reversed[100];
    int length, j = 0;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    length = strlen(str) - 1; // Exclude newline character
    for (int i = length; i >= 0; i--) {
        reversed[j++] = str[i];
    }
    reversed[j] = '\0'; // Null terminate the reversed string
    printf("Reversed String: %s\n", reversed);
    return 0;
}

---
64. Program to Convert a String to Uppercase
#include <stdio.h>
#include <ctype.h>
int main() {
    char str[100];
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    for (int i = 0; str[i] != '\0'; i++) {
        str[i] = toupper(str[i]); // Convert to uppercase
    }
    printf("Uppercase String: %s\n", str);
    return 0;
}

---
65. Program to Convert a String to Lowercase
#include <stdio.h>
#include <ctype.h>
int main() {
    char str[100];
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    for (int i = 0; str[i] != '\0'; i++) {
        str[i] = tolower(str[i]); // Convert to lowercase
    }
    printf("Lowercase String: %s\n", str);
    return 0;
}

---
66. Program to Count Words in a String
#include <stdio.h>
#include <string.h>
int main() {
    char str[100];
    int count = 0;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] == ' ' || str[i] == '\n') {
            count++; // Increment count on space or newline
        }
    }
    printf("Word Count: %d\n", count + 1); // Add one for the last word
    return 0;
}

---
67. Program to Check Palindrome
#include <stdio.h>
#include <string.h>
int main() {
    char str[100];
    int length, flag = 0;
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    length = strlen(str) - 1; // Exclude newline character
    for (int i = 0; i < length / 2; i++) {
        if (str[i] != str[length - i - 1]) {
            flag = 1; // Not a palindrome
            break;
        }
    }
    if (flag == 0)
        printf("'%s' is a palindrome.\n", str);
    else
        printf("'%s' is not a palindrome.\n", str);
    return 0;
}

---
68. Program to Merge Two Arrays
#include <stdio.h>
int main() {
    int arr1[100], arr2[100], merged[200], n1, n2, i, j;
    printf("Enter number of elements in first array: ");
    scanf("%d", &n1);
    printf("Enter %d elements:\n", n1);
    for (i = 0; i < n1; i++) {
        scanf("%d", &arr1[i]);
    }
    printf("Enter number of elements in second array: ");
    scanf("%d", &n2);
    printf("Enter %d elements:\n", n2);
    for (j = 0; j < n2; j++) {
        scanf("%d", &arr2[j]);
    }
    for (i = 0; i < n1; i++) {
        merged[i] = arr1[i];
    }
    for (j = 0; j < n2; j++) {
        merged[i + j] = arr2[j];
    }
    printf("Merged array: ");
    for (i = 0; i < n1 + n2; i++) {
        printf("%d ", merged[i]);
    }
    printf("\n");
    return 0;
}
---
 69. Program to Sort an Array
#include <stdio.h>

int main() {
    int n, i, j, temp;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Bubble sort algorithm
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                // Swap arr[j] and arr[j + 1]
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    printf("Sorted array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
---
 70. Program to Find the Second Largest Number
#include <stdio.h>

int main() {
    int n, largest, secondLargest;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    largest = secondLargest = -1; // Initialize to minimum values

    for (int i = 0; i < n; i++) {
        if (arr[i] > largest) {
            secondLargest = largest; // Update second largest
            largest = arr[i]; // Update largest
        } else if (arr[i] > secondLargest && arr[i] != largest) {
            secondLargest = arr[i]; // Update second largest
        }
    }

    if (secondLargest == -1) {
        printf("There is no second largest element.\n");
    } else {
        printf("Second largest element = %d\n", secondLargest);
    }

    return 0;
}
---
 71. Program to Find the Length of a String
#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    int length;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    length = strlen(str) - 1; // Subtract 1 to ignore newline character

    printf("Length of the string: %d\n", length);

    return 0;
}
---
 72. Program to Copy a String
#include <stdio.h>
#include <string.h>

int main() {
    char source[100], destination[100];

    printf("Enter a string: ");
    fgets(source, sizeof(source), stdin);
    source[strcspn(source, "\n")] = 0; // Remove newline character

    strcpy(destination, source); // Copying string
    printf("Copied string: %s\n", destination);

    return 0;
}
---
73. Program to Count Vowels in a String
#include <stdio.h>

int main() {
    char str[100];
    int count = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    for (int i = 0; str[i] != '\0'; i++) {
        char ch = tolower(str[i]);
        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
            count++;
        }
    }

    printf("Number of vowels: %d\n", count);

    return 0;
}
---
74. Program to Find the Frequency of Characters
#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    int freq[256] = {0}; // Assuming ASCII

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    for (int i = 0; str[i] != '\0'; i++) {
        freq[(unsigned char)str[i]]++;
    }

    printf("Character frequencies:\n");
    for (int i = 0; i < 256; i++) {
        if (freq[i] != 0) {
            printf("%c: %d\n", i, freq[i]);
        }
    }

    return 0;
}
---
 75. Program to Reverse a String
#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    int length, i;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    str[strcspn(str, "\n")] = 0; // Remove newline character

    length = strlen(str);
    printf("Reversed string: ");
    for (i = length - 1; i >= 0; i--) {
        putchar(str[i]);
    }
    putchar('\n'); // New line after reversed string

    return 0;
}
---
 76. Program to Remove Spaces from a String
#include <stdio.h>
#include <string.h>

int main() {
    char str[100], result[100];
    int j = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);
    str[strcspn(str, "\n")] = 0; // Remove newline character

    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] != ' ') {
            result[j++] = str[i];
        }
    }
    result[j] = '\0'; // Null-terminate the new string

    printf("String without spaces: %s\n", result);

    return 0;
}
---
 77. Program to Check for a Substring
#include <stdio.h>
#include <string.h>

int main() {
    char str[100], sub[100];

    printf("Enter the main string: ");
    fgets(str, sizeof(str), stdin);
    str[strcspn(str, "\n")] = 0; // Remove newline character

    printf("Enter the substring: ");
    fgets(sub, sizeof(sub), stdin);
    sub[strcspn(sub, "\n")] = 0; // Remove newline character

    if (strstr(str, sub) != NULL) {
        printf("Substring found.\n");
    } else {
        printf("Substring not found.\n");
    }

    return 0;
}
---
 78. Program to Count Words in a String
#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main() {
    char str[100];
    int count = 0;
    int inWord = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    for (int i = 0; str[i] != '\0'; i++) {
        if (isspace(str[i])) {
            inWord = 0; // We are outside a word
        } else {
            if (inWord == 0) {
                count++; // We found a new word
                inWord = 1; // We are inside a word
            }
        }
    }

    printf("Number of words: %d\n", count);

    return 0;
}

---
79. Program to Convert Binary to Decimal
#include <stdio.h>
#include <math.h>

int main() {
    int binary, decimal = 0, base = 1, remainder;

    printf("Enter a binary number: ");
    scanf("%d", &binary);

    while (binary > 0) {
        remainder = binary % 10;
        decimal = decimal + remainder * base;
        binary /= 10;
        base *= 2;
    }

    printf("Decimal equivalent: %d\n", decimal);

    return 0;
}

---
 80. Program to Convert Decimal to Binary
#include <stdio.h>

int main() {
    int decimal, binary[32], i = 0;

    printf("Enter a decimal number: ");
    scanf("%d", &decimal);

    while (decimal > 0) {
        binary[i] = decimal % 2;
        decimal /= 2;
        i++;
    }

    printf("Binary equivalent: ");
    for (int j = i - 1; j >= 0; j--) {
        printf("%d", binary[j]);
    }
    printf("\n");

    return 0;
}
---
81. Program to Find LCM of Two Numbers
#include <stdio.h>

int main() {
    int a, b, lcm;

    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);

    // Calculate LCM
    lcm = (a > b) ? a : b; // Start with the maximum value

    while (1) {
        if (lcm % a == 0 && lcm % b == 0) {
            printf("LCM of %d and %d = %d\n", a, b, lcm);
            break;
        }
        lcm++;
    }

    return 0;
}
---
 82. Count Vowels and Consonants
#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    int vowels = 0, consonants = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    for (int i = 0; i < strlen(str); i++) {
                if (str[i] >= 'A' && str[i] <= 'Z') {
            str[i] = str[i] + 32; // Convert to lowercase
        }

        if (str[i] >= 'a' && str[i] <= 'z') {
            if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u') {
                vowels++;
            } else {
                consonants++;
            }
        }
    }

    printf("Vowels: %d\n", vowels);
    printf("Consonants: %d\n", consonants);

    return 0;
}
---
83. Program to Check Armstrong Number
#include <stdio.h>
#include <math.h>

int main() {
    int num, originalNum, remainder, result = 0, digits = 0;

    printf("Enter an integer: ");
    scanf("%d", &num);

    originalNum = num;

    // Finding the number of digits
    while (originalNum != 0) {
        originalNum /= 10;
        ++digits;
    }

    originalNum = num;

    // Calculating the sum of the power of digits
    while (originalNum != 0) {
        remainder = originalNum % 10;
        result += pow(remainder, digits);
        originalNum /= 10;
    }

    if (result == num) {
        printf("%d is an Armstrong number.\n", num);
    } else {
        printf("%d is not an Armstrong number.\n", num);
    }

    return 0;
}
---
84. Program to Check Perfect Number
#include <stdio.h>

int main() {
    int num, sum = 0;

    printf("Enter a positive integer: ");
    scanf("%d", &num);

    for (int i = 1; i <= num / 2; i++) {
        if (num % i == 0) {
            sum += i;
        }
    }

    if (sum == num) {
        printf("%d is a perfect number.\n", num);
    } else {
        printf("%d is not a perfect number.\n", num);
    }

    return 0;
}
---
85. Program to Calculate LCM
#include <stdio.h>

int main() {
    int a, b, lcm;

    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);

    lcm = (a > b) ? a : b; // Start with the larger number

    while (1) {
        if (lcm % a == 0 && lcm % b == 0) {
            printf("LCM of %d and %d = %d\n", a, b, lcm);
            break;
        }
        lcm++;
    }

    return 0;
}
---
86. Program to Calculate GCD
#include <stdio.h>

int main() {
    int a, b, gcd;

    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);

    for (int i = 1; i <= a && i <= b; i++) {
        if (a % i == 0 && b % i == 0) {
            gcd = i; // Update gcd
        }
    }

    printf("GCD of %d and %d = %d\n", a, b, gcd);

    return 0;
}
---
87. Program to Generate Multiplication Table
#include <stdio.h>

int main() {
    int num;

    printf("Enter a number: ");
    scanf("%d", &num);

    printf("Multiplication table of %d:\n", num);
    for (int i = 1; i <= 10; i++) {
        printf("%d x %d = %d\n", num, i, num * i);
    }

    return 0;
}
---
88. Program to Count Digits in a Number
#include <stdio.h>

int main() {
    int n, count = 0;

    printf("Enter an integer: ");
    scanf("%d", &n);

    while (n != 0) {
        n /= 10; // Remove last digit
        count++; // Increment count
    }

    printf("Number of digits = %d\n", count);

    return 0;
}
---
89. Program to Check Leap Year
#include <stdio.h>

int main() {
    int year;

    printf("Enter a year: ");
    scanf("%d", &year);

    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        printf("%d is a leap year.\n", year);
    } else {
        printf("%d is not a leap year.\n", year);
    }

    return 0;
}
---
90. Program to Convert Binary to Decimal
#include <stdio.h>
#include <math.h>

int main() {
    int binary, decimal = 0, base = 1, remainder;

    printf("Enter a binary number: ");
    scanf("%d", &binary);

    while (binary > 0) {
        remainder = binary % 10; // Get the last digit
        decimal = decimal + remainder * base; // Convert to decimal
        binary /= 10; // Remove last digit
        base *= 2; // Increase base
    }

    printf("Decimal equivalent: %d\n", decimal);

    return 0;
}
---